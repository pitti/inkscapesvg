% inkscapesvg.sty
%
% Copyright (C) 2013  Philipp Ittershagen <p.ittershagen@gmail.com>
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
%
% This Package provides the command \includesvg to include an svg
% image.
% 
% This is achieved by calling inkscape when the svg file is
% newer than the corresponding pdf/pdf_tex files. Therefore, to use
% this package, one has to call pdflatex using the option -shell-escape.
%
% The command has two optional parameters for defining the image and
% font size:
% 
%  \includesvg[width=1.0\textwidth,fsize=\small]{image}
%
% The command searches for the SVG in \graphicspath in order to behave
% like \includegraphics.
%



\ProvidesPackage{inkscapesvg}[2013/05/24 loading automatic svg conversion support]
\RequirePackage{graphicx}
\RequirePackage{color}
\RequirePackage{xkeyval}

\newif\if@inksvg@write@support
\@inksvg@write@supporttrue

\presetkeys{inksvg@keys}{latex=true}{}
\presetkeys{inksvg@keys}{crop=true}{}

\DeclareOption{nolatex}{
  \presetkeys{inksvg@keys}{latex=false}{}
}

\DeclareOption{nocrop}{
  \presetkeys{inksvg@keys}{crop=false}{}
}

\ProcessOptions

\define@boolkey{inksvg@keys}[@inksvg@]{latex}[true]{}
\define@boolkey{inksvg@keys}[@inksvg@]{crop}[true]{}

\def\inksvg@error@text{%
  write18 command disabled. pdf_tex creation \MessageBreak
  from svg is not supported. Please use \MessageBreak
  -shell-escape when calling pdflatex.
}


% Print warning when -shell-escape ist not active
\ifnum\pdfshellescape=1\else
  \PackageWarning{inkscapesvg}{\inksvg@error@text}
  \@inksvg@write@supportfalse
\fi


% Call inkscape to convert svg -> pdf/pdf_tex if svg file is newer.
\newcommand{\inksvg@update@svg@if@newer}[1]{%
  \ifnum\pdfstrcmp{\pdffilemoddate{#1.svg}}{\pdffilemoddate{#1.pdf}}>0{%
    \if@inksvg@write@support%
      \immediate\write18%
        {inkscape -z %
          \if@inksvg@crop -D \fi %
          --file=#1.svg --export-pdf=#1.pdf %
          \if@inksvg@latex --export-latex \fi}%
      }%
    \else
      \PackageError{inkscapesvg}{\inksvg@error@text}
    \fi
  \fi}


\newif\if@inksvg@file@found
\@inksvg@file@foundfalse

% Update and include the SVG
\def\inksvg@include@svg#1#2{%
  \IfFileExists{#1#2.svg}{%
    \inksvg@update@svg@if@newer{#1#2}%
    \if@inksvg@latex
      \input{#1#2.pdf_tex}%
    \else
      \ifdefined\svgwidth
        \includegraphics[\XKV@rm,width=\svgwidth]{#1#2.pdf}%
      \else
        \includegraphics[\XKV@rm]{#1#2.pdf}%
      \fi
    \fi
    \@inksvg@file@foundtrue%
  }}

% try including the SVG for each token in \Ginput@path
\def\inksvg@check@all@paths#1{%
  \expandafter\@tfor\expandafter\path@t
      \expandafter:\expandafter=\inksvg@input@path\do{%
      \inksvg@include@svg{\path@t}{#1}%
  }}

\define@key{inksvg@keys}{width}{\def\svgwidth{#1}}
\define@key{inksvg@keys}{fsize}{#1}

% Parse optional argument list [] after command
\def\includesvg{%
  \@ifnextchar[%]
  \inksvg@include@svg@i
  {\inksvg@include@svg@i[]}}

% check for empty \graphicspath and include SVG
\def\inksvg@include@svg@i[#1]#2{%
  \@inksvg@file@foundfalse%
  \setkeys*{inksvg@keys}{#1}%
  \ifx\Ginput@path\@undefined%
    \def\inksvg@input@path{{}}%
  \else%
    \let\inksvg@input@path\Ginput@path%
  \fi%
  \inksvg@check@all@paths{#2}%
  \if@inksvg@file@found\else%
    \PackageError{inkscapesvg}{Could not load #2.svg}%
  \fi}

\endinput


% vim: set et tw=72 :
